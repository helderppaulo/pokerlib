plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'java-library'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
}

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    ktlint
}

apply plugin: "java"

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.google.guava:guava:30.0-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation "org.jetbrains.kotlin:kotlin-script-runtime:1.4.10"
    ktlint "com.pinterest:ktlint:0.39.0"
}

test {
    minHeapSize = "512m"
    maxHeapSize = "2048m"
    useJUnitPlatform()
}

tasks.jacocoTestReport.reports {
    xml.enabled true
    html.enabled false
    xml.destination file("test-report/jacoco/jacoco-test-report.xml")
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "helderppaulo"
        property "sonar.projectKey", "helderppaulo_pokerlib"
        property "sonar.login", "70a700cb2f24c39da69fe8e79f28a7abd9cc4dae"
        property "sonar.jacoco.reportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.junit.reportsPath", "build/test-results/*/TEST-*.xml"
    }
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"
project.tasks["jacocoTestReport"].dependsOn "build"

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml", "--experimental"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt", "--experimental"
}